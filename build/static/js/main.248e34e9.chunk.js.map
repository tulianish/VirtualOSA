{"version":3,"sources":["components/LineChart.js","components/UserInterface.js","components/CommandLineInterface.js","App.js","serviceWorker.js","index.js"],"names":["Chart","defaults","global","defaultFontFamily","LineChart","props","addData","bind","canvasRef","React","createRef","state","data","displayGraph","displayPersistent","colorPallette","key1","key2","key3","chart","label","color","randomColor","labels","this","map","d","x","datasets","push","backgroundColor","fill","y","pointRadius","update","setState","display","persistent","myChart","current","type","options","title","fontColor","text","rbw","toPrecision","xoffset","yoffset","fontSize","position","maintainAspectRatio","responsive","showLine","scales","yAxes","gridLines","ticks","scaleLabel","labelString","ylabel","yunit","xAxes","autoSkip","maxTicksLimit","xlabel","xunit","plugins","zoom","pan","enabled","mode","xScale0","max","yScale0","pointStyle","markerSize","ref","Component","UserInterface","handleChange","event","value","target","req","handleSubmit","startClicked","stopClicked","singleClicked","persistentClicked","result","logElement","start","axios","get","fetchData","buttonStart","Date","stop","sendDisplay","sendPersistent","url","catch","error","response","version","JSON","stringify","document","getElementById","includes","timestamp","toLocaleString","request","console","log","className","Button","variant","size","onClick","id","placeholder","aria-label","aria-describedby","onChange","class","style","width","addToLogBox","clearLogs","lastValue","buttonEntry","scrollTop","scrollHeight","name","App","sendLogElement","logReceived","buttonLog","clickLog","singleFetch","startFetch","stopFetch","startPersistent","timer","readings","xandy","i","xdata","length","ydata","xunits","yunits","resolution_bandwidth_nm","setInterval","clearInterval","Tabs","defaultActiveKey","Tab","eventKey","CommandLineInterface","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.248e34e9.chunk.js","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\nimport randomColor from 'randomcolor';\nimport 'chartjs-plugin-zoom/chartjs-plugin-zoom.min.js';\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n// LineChart\nclass LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.addData = this.addData.bind(this);\n      this.canvasRef = React.createRef();\n      //this.setInitialState = this.setInitialState.bind(this);\n      //this.getData = this.getData.bind(this);\n      this.state = {\n        data: this.props.data,\n        displayGraph: false,\n        displayPersistent: false,\n        colorPallette: {\n          key1: 'Red',\n          key2: \"Blue\",\n          key3: \"Black\"\n        }\n      }\n    }\n    addData(chart, label, data) {\n      var color = randomColor();\n      chart.data.labels = this.state.data[0].data.map(d => d.x);\n      chart.data.datasets.push({\n        label: \"Trace-\" + color,\n        backgroundColor: color,\n        fill: 'none',\n        data: this.state.data[0].data.map(d => d.y),\n        pointRadius: 1\n      });\n      chart.update(0);\n    }\n    componentWillReceiveProps(props) {\n      this.setState({\n        displayGraph: this.props.display\n      });\n      this.setState({\n        displayPersistent: this.props.persistent\n      });\n      this.setState({\n        data: this.props.data\n      });\n    }\n    componentDidUpdate() {\n      if (this.state.displayPersistent && this.state.displayGraph) {\n        this.addData(this.myChart, this.state.data)\n      } else if (this.state.displayGraph) {\n        this.myChart = new Chart(this.canvasRef.current, {\n          type: 'line',\n          options: {\n            title: {\n              display: true,\n              fontColor: \"Black\",\n              text: 'RBW: ' + (this.state.data[0].rbw.toPrecision(3)) + ' (nm) | X Offset: ' + (this.state.data[0].xoffset.toPrecision(3)) + ' | Y Offset: ' + (this.state.data[0].yoffset.toPrecision(3)),\n              fontSize: 15,\n              position: \"Bottom\"\n            },\n            maintainAspectRatio: true,\n            responsive: true,\n            showLine: true,\n            scales: {\n              yAxes: [{\n                gridLines: {\n                  color: 'Black'\n                },\n                ticks: {\n                  fontColor: \"Black\"\n                },\n                scaleLabel: {\n                  fontSize: 20,\n                  display: true,\n                  labelString: this.state.data[0].ylabel + \" (\" + this.state.data[0].yunit + \")\",\n                  fontColor: \"Black\"\n                }\n              }],\n              xAxes: [{\n                gridLines: {\n                  color: \"Black\"\n                },\n                ticks: {\n                  fontColor: \"Black\",\n                  autoSkip: true,\n                  maxTicksLimit: 8\n                },\n                scaleLabel: {\n                  fontSize: 20,\n                  display: true,\n                  labelString: this.state.data[0].xlabel + \" (\" + this.state.data[0].xunit + \")\",\n                  fontColor: \"Black\"\n                }\n              }]\n            },\n            plugins: {\n              zoom: {\n                pan: {\n                  enabled: true,\n                  mode: 'xy',\n                  xScale0: {\n                    max: 1e4\n                  },\n                  yScale0: {\n                    max: 1e4\n                  }\n                },\n                zoom: {\n                  enabled: true,\n                  mode: 'xy'\n                }\n              }\n            },\n          },\n          data: {\n            labels: this.state.data[0].data.map(d => d.x),\n            pointStyle: 'line',\n            markerSize: 0.01,\n            datasets: [{\n              label: this.state.data[0].title,\n              data: this.state.data[0].data.map(d => d.y),\n              fill: 'none',\n              backgroundColor: \"#00CC00\",\n              pointRadius: 1\n            }]\n          }\n        });\n      } else {\n        this.myChart = new Chart(this.canvasRef.current, {\n          type: 'line',\n          options: {\n            maintainAspectRatio: true,\n            responsive: true,\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"Black\"\n                },\n                scaleLabel: {\n                  fontSize: 20,\n                  display: true,\n                  labelString: \"Signal (DBm)\",\n                  fontColor: \"Black\"\n                }\n              }],\n              xAxes: [{\n                ticks: {\n                  fontColor: \"Black\"\n                },\n                scaleLabel: {\n                  fontSize: 20,\n                  display: true,\n                  labelString: \"Wavelength (M)\",\n                  fontColor: \"Black\"\n                }\n              }]\n            }\n          },\n        });\n      }\n    }\n    async componentDidMount() {\n      this.myChart = new Chart(this.canvasRef.current, {\n        type: 'line',\n        options: {\n          maintainAspectRatio: true,\n          responsive: true,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                color: \"White\"\n              },\n              ticks: {\n                fontColor: \"White\"\n              },\n              scaleLabel: {\n                fontSize: 20,\n                display: true,\n                labelString: \"Signal (DBm)\",\n                fontColor: \"Black\"\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"White\"\n              },\n              ticks: {\n                fontColor: \"White\",\n                autoSkip: true,\n                maxTicksLimit: 8\n              },\n              scaleLabel: {\n                fontSize: 20,\n                display: true,\n                labelString: \"Signal (M)\",\n                fontColor: \"Black\"\n              }\n            }]\n          }\n        },\n      });\n      this.setState({\n        data: this.props.data,\n      })\n    }\n    render() {\n      return ( < > < canvas ref = {\n          this.canvasRef\n        }\n        /> < />);\n      }\n    }\n    export default LineChart;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/button.css\";\nimport axios from \"axios\";\nclass UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.startClicked = this.startClicked.bind(this);\n    this.stopClicked = this.stopClicked.bind(this);\n    this.singleClicked = this.singleClicked.bind(this);\n    this.persistentClicked = this.persistentClicked.bind(this);\n    this.state = {\n      req: \"\",\n      result: \"\",\n      logElement: {}\n    };\n  }\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      req: value\n    });\n  }\n  async startClicked() {\n    this.props.start();\n    let url = '/cmd/START';\n    let fetchData = await axios.get(url);\n    this.props.buttonStart(new Date() + \" : \" + fetchData.data + \"\\n\");\n  }\n  async stopClicked() {\n    this.props.stop();\n    let url = '/cmd/STOP';\n    let fetchData = await axios.get(url);\n    this.props.buttonStart(new Date() + \" : \" + fetchData.data + \"\\n\");\n  }\n  async singleClicked() {\n    this.props.sendDisplay();\n    let url = '/cmd/SINGLE';\n    let fetchData = await axios.get(url);\n    this.props.buttonStart(new Date() + \" : \" + fetchData.data + \"\\n\");\n  }\n  async persistentClicked() {\n    this.props.sendPersistent();\n    this.props.buttonStart(new Date() + \" : \" + \"Persistence Mode : Turned On\" + \"\\n\");\n  }\n  async handleSubmit(event) {\n    let url = '/cmd/' + this.state.req;\n    let fetchData = await axios.get(url).catch(function(error) {\n      return error.response;\n    });\n    if (this.state.req == 'TRACE' && fetchData.data.version) {\n      this.setState({\n        result: JSON.stringify(fetchData) + \"\\n\"\n      });\n      document.getElementById(\"logBox\").value += this.state.result;\n    } else if (fetchData.data.includes(\"+READY>\")) {\n      let eachLogElement = {\n        timestamp: new Date().toLocaleString(),\n        request: this.state.req,\n        response: fetchData.data\n      };\n      this.setState({\n        result: new Date() + \" - \" + this.state.req + \"  : \" + fetchData.data + \"\\n\"\n      });\n      document.getElementById(\"logBox\").value += this.state.result;\n    } else {\n      console.log(\"Garbage found\" + fetchData.data)\n    }\n  }\n  render() {\n    return ( \n      < >\n       <div className = \"container\"> < div className = \"row\" > < div className = \" button-horizontal\" > < Button variant = \"success\"\n        size = \"lg\"\n        onClick = {\n          this.startClicked\n        } > Start < /Button> < Button variant = \"danger\"\n        size = \"lg\"\n        onClick = {\n          this.stopClicked\n        } > Stop < /Button> < Button variant = \"warning\"\n        size = \"lg\"\n        onClick = {\n          this.singleClicked\n        } > Single < /Button> < Button variant = \"primary\"\n        size = \"lg\"\n        onClick = {\n          this.persistentClicked\n        } > Persistent < /Button> < /div> < /div> < div className = \"row\" > < div className = \"input-group mb-3\" > < div className = \"input-group-append cmdholder\" > < button className = \"btn btn-outline-secondary\"\n        type = \"submit\"\n        id = \"button-addon2\" > /cmd/ < /button> < /div><input\n        type = \"text\"\n        className = \"form-control\"\n        placeholder = \"Enter query here\"\n        aria-label = \"Enter query here\"\n        aria-describedby = \"button-addon2\"\n        onChange = {\n          this.handleChange\n        }\n        /> < div className = \"input-group-append\" > < button className = \"btn btn-outline-secondary\"\n        type = \"submit\"\n        id = \"button-addon2\"\n        onClick = {\n          this.handleSubmit\n        } > Submit < /button> < /div> < /div> < /div> < div className = \"row \" > < div className = \"col align-self-end \" > < div class = \"input-group mb-3\" > < input type = \"text\"\n        style = {\n          {\n            width: \"2\"\n          }\n        }\n        class = \"form-control\"\n        placeholder = \"Execution Result\"\n        aria-label = \"Execution Result\"\n        aria-describedby = \"button-addon2\"\n        value = {\n          this.state.result\n        }\n        /> < /div> < /div> < /div> < /div> \n      < />);\n  }\n}\nexport default UserInterface;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/CLI.css\";\nimport axios from \"axios\";\nclass UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addToLogBox = this.addToLogBox.bind(this);\n    this.clearLogs = this.clearLogs.bind(this);\n    this.state = {\n      req: \"\",\n      result: \"\",\n      log: [],\n      lastValue: \"\"\n    };\n  }\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.setState({\n      req: value\n    });\n    console.log(this.state.req)\n  }\n  addToLogBox() {\n    if (this.state.lastValue == this.props.buttonEntry) {} else {\n      document.getElementById(\"logBox\").value += this.props.buttonEntry;\n    }\n  }\n  componentWillReceiveProps(props) {\n    this.setState({\n      lastValue: this.props.buttonEntry\n    });\n  }\n  componentDidUpdate() {\n    this.addToLogBox();\n  }\n  clearLogs() {\n    document.getElementById(\"logBox\").value = \"\";\n  }\n  async handleSubmit(event) {\n    let url = 'api/cmd/' + this.state.req;\n    let fetchData = await axios.get(url).catch(function(error) {\n      return error.response;\n    });\n    if (this.state.req == 'TRACE' && fetchData.data.version) {\n      console.log(\"Trying to hit trace?\");\n      this.setState({\n        result: JSON.stringify(fetchData) + \"\\n\"\n      });\n      document.getElementById(\"logBox\").value += this.state.result;\n      document.getElementById(\"logBox\").scrollTop = document.getElementById(\"logBox\").scrollHeight;\n    } else if (fetchData.data.includes(\"+READY>\")) {\n      let eachLogElement = {\n        timestamp: new Date().toLocaleString(),\n        request: this.state.req,\n        response: fetchData.data\n      };\n      this.setState({\n        result: new Date() + \" - \" + this.state.req + \"  : \" + fetchData.data + \"\\n\"\n      });\n      document.getElementById(\"logBox\").value += this.state.result;\n      document.getElementById(\"logBox\").scrollTop = document.getElementById(\"logBox\").scrollHeight;\n    } else {\n      console.log(\"Garbage found\" + fetchData.data)\n    }\n  }\n  render() {\n    return ( \n      < > \n        < div className = \"container\" > < div className = \"row\" > < div className = \"input-group mb-3\" > < div className = \"input-group-append cmdholder\" > < button className = \"btn btn-outline-secondary\"\n        type = \"submit\"\n        id = \"button-addon2\" > /cmd/ < /button> < /div> < input type = \"text\"\n        class = \"form-control\"\n        placeholder = \"Enter query ...\"\n        aria-label = \"Enter query ...\"\n        aria-describedby = \"button-addon2\"\n        onChange = {\n          this.handleChange\n        }\n        /> < div className = \"input-group-append\" > < button class = \"btn btn-outline-secondary\"\n        type = \"submit\"\n        id = \"button-addon2\"\n        onClick = {\n          this.handleSubmit\n        } > Submit < /button> < /div> < /div> < /div> < div className = \"row\" > < textArea id = \"logBox\"\n        type = \"text\"\n        className = \"textArea\"\n        name = \"Logs\"\n        value = {\n          this.state.log\n        } > < /textArea> < /div> \n        <div className = \"row\">\n          <div className = \"col\">\n            <button className = \"btn btn-lg btn-danger clear\" type = \"submit\" id = \"button-addon2\" onClick = {this.clearLogs}> Clear < /button>\n          </div>\n        </div> \n      </div>\n      < />);\n  }\n}\nexport default UserInterface;","import React from \"react\";\nimport LineChart from \"./components/LineChart\";\nimport UserInterface from \"./components/UserInterface\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/App.css\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport CommandLineInterface from \"./components/CommandLineInterface\";\n// App\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.singleFetch = this.singleFetch.bind(this);\n    this.startFetch = this.startFetch.bind(this);\n    this.stopFetch = this.stopFetch.bind(this);\n    this.startPersistent = this.startPersistent.bind(this);\n    this.sendLogElement = this.sendLogElement.bind(this);\n    this.state = {\n      display: false,\n      persistent: false,\n      data: [],\n      timer: 0,\n      logElement : \"\",\n      clickLog : \"\"\n    };\n  }\n\n  sendLogElement = (logReceived) =>{\n    this.setState({logElement : logReceived });\n  }\n\n  async singleFetch() {\n    let data = [];\n    let readings = [];\n    let xandy = [];\n    let url = \"/cmd/TRACE\";\n    data = await axios.get(url);\n    if (data.data.version) {\n      for (let i = 0; i < data.data.xdata.length; i++) {\n        xandy.push({\n          x: (data.data.xdata[i] * 100000000).toPrecision(4),\n          y: data.data.ydata[i],\n        });\n      }\n      readings.push({\n        title: \"Trace-#00cc00\",\n        data: xandy,\n        xlabel: data.data.xlabel,\n        xunit: data.data.xunits,\n        ylabel: data.data.ylabel,\n        yunit: data.data.yunits,\n        rbw: data.data.resolution_bandwidth_nm,\n        xoffset: data.data.xoffset,\n        yoffset: data.data.yoffset,\n      });\n      this.setState({\n        data: readings,\n        display: true\n      });\n    }\n  }\n  async componentDidMount() {\n    let data = [];\n    let readings = [];\n    let xandy = [];\n    let url = \"/cmd/TRACE\";\n    data = await axios.get(url);\n    if (data.data.version) {\n      for (let i = 0; i < data.data.xdata.length; i++) {\n        xandy.push({\n          x: (data.data.xdata[i] * 100000000).toPrecision(4),\n          y: data.data.ydata[i],\n        });\n      }\n      readings.push({\n        title: \"Trace-00CC00\",\n        data: xandy,\n        xlabel: data.data.xlabel,\n        xunit: data.data.xunits,\n        ylabel: data.data.ylabel,\n        yunit: data.data.yunits,\n        rbw: data.data.resolution_bandwidth_nm,\n        xoffset: data.data.xoffset,\n        yoffset: data.data.yoffset,\n      });\n      this.setState({\n        data: readings,\n        persistent: false,\n        display: false\n      });\n    }\n  }\n\n\n  buttonLog = (value) => {\n    this.setState({clickLog : value});\n\n  }\n  \n  startFetch() {\n    this.state.timer = setInterval(() => this.singleFetch(), 1000);\n  }\n\n  startPersistent() {\n    this.state.timer = setInterval(() => {\n      this.singleFetch();\n      this.setState({ persistent: true });\n    }, 1000);\n  }\n\n  stopFetch() {\n    clearInterval(this.state.timer);\n  }\n  render() {\n    return (\n      <div>\n        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"home\" title=\"Home\">\n            <div className=\"card text-center\">\n              <div className=\"card-header\">Control Center</div>\n              <div className=\"card-body\">\n                <UserInterface\n                  start={this.startFetch}\n                  buttonStart={this.buttonLog}\n                  stop={this.stopFetch}\n                  sendDisplay={this.singleFetch}\n                  sendPersistent={this.startPersistent}\n            \n                />\n              </div>\n              <div className=\"card-footer text-muted\">Graph</div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"flex-view\">\n                  <div className=\"chart-component\">\n                    <LineChart\n                      display={this.state.display}\n                      data={this.state.data}\n                      persistent={this.state.persistent}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Tab>\n          <Tab eventKey=\"profile\" title=\"Command Line Interface\">\n            <CommandLineInterface buttonEntry={this.state.clickLog}\n            />\n          </Tab>\n        </Tabs>\n        <nav className=\"navbar navbar-light bg-light footer\">\n          <a className=\"navbar-brand\" href=\"https://linkedin.com/in/tulianish\">\n            Designed by Anish Tuli\n          </a>\n        </nav>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}